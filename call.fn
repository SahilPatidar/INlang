struct Call{
    a:i32,
    number:string,
};

fn find_factor(a:i32) -> i32 {
    if a == 1 :{
        return 1;
    }else if a :{
        for i in 1..15:{
            i+=a[i];
        }
    }else{
        while i < 35:{
            i+=a[i];
        }
    }
    for i in 1..3:{
        i+=a[i];
    }
    while i < 3:{
        i+=a[i];
    }
    a->b = 0;
    c[i]->a = 0;
    func()[i]->ca[i]->a.c = 0;
    let a = get_numer(1,2,&a);
    return a*find_factor(a-1);
}
(a+b-a+1*(11+a[3]+3*5*(r+a[8])));

fn main() {
    let a : i32;
    let b : i64;
    let c : fn();
    let i = &[1,2,3,4,5];
    a::func();
    return find_factor(5);
}